#!/bin/bash
PATH=/bin:/usr/bin
[ -d "$BACKUP_EXECUTABLE_DIR" ] || BACKUP_EXECUTABLE_DIR=${0%/*}
source $BACKUP_EXECUTABLE_DIR/library.sh || exit 1

LOG_LEVEL=${LOG_LEVEL-0}

while [ "$1" ]; do 
	cmd=$1
	case "$cmd" in 
		-s|--settings)
			shift
			ROOT=$1
			;;
		-n|--dry-run)
			DRY_RUN=true
			;;
		-v|--verbose)
			let LOG_LEVEL++
			;;
		-q|--quiet)
			let LOG_LEVEL--
			;;
		*)
			ARGS="$ARGS $1"
	esac
	shift
done

ROOT=${ROOT-$HOME/.backup}
ROOT=`readlink -m "$ROOT"`
mkdir -p "$ROOT/config" || die "$ROOT/config could not be created"
TARGETS=$ROOT/config/targets
[ -e $TARGETS ] || touch $TARGETS
REPOS=$ROOT/config/repos
[ -e $REPOS ] || touch $REPOS

function run {
	check_and_lock
	PATH=$BACKUP_EXECUTABLE_DIR:$ROOT:$PATH
	export PATH BACKUP_EXECUTABLE_DIR DRY_RUN LOG_LEVEL ROOT SESSION TARGETS REPOS
	local cmd=$1
	shift
	case "$cmd" in
		-c)
			source <(echo $*)
			exit
			;;
		*) 
			source $cmd $*
			exit
		;;
	esac
}

set - $ARGS
cmd=$1
[ -n "$cmd" ] || die "No command given"
case "$cmd" in 
	-lock|--lock)
		check_and_lock
		echo "All backups are locked; delete $SESSION/lock to unlock." 1>&2
		echo Backup has been explicitly locked. Delete this file to unlock. >$SESSION/lock
		trap '' EXIT
		exit ;;
	-c) run $* ;;
	-*) die "Unrecognized command: $1" ;;
	*) run $* ;;
esac;
