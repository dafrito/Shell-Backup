#!/bin/bash
PATH=/bin:/usr/bin
[ -d "$BACKUP_EXECUTABLE_DIR" ] || BACKUP_EXECUTABLE_DIR=${0%/*}
source $BACKUP_EXECUTABLE_DIR/library.sh || exit 1

DEBUG_LEVEL=${DEBUG_LEVEL-0}

cmd=
while [ "$1" ]; do 
	if [ "$cmd" ]; then
		ARGS="$ARGS $1"
	else
		case "$1" in 
			-lock|--lock) cmd="LOCK" ;;
			-c) cmd="RUN" ;;
			-s|--settings)
				shift
				ROOT=$1
				;;
			-n|--dry-run)
				DRY_RUN=true
				;;
			-v|--verbose)
				let DEBUG_LEVEL++
				;;
			-q|--quiet)
				let DEBUG_LEVEL--
				;;
			-*) die "Unrecognized parameter: $1" ;;
			*)
				cmd="RUN"
				ARGS="$1"
		esac
	fi
	shift
done
[ -n "$cmd" ] || die "No command was recognized"

ROOT=${ROOT-$BACKUP_EXECUTABLE_DIR}
ROOT=`readlink -m "$ROOT"`
[ -d "$ROOT" ] || die "$ROOT does not exist or is not a directory"
CONFIG=${CONFIG-$HOME/.backup}
[ -d "$CONFIG" ] || die "$CONFIG does not exist or is not a directory"

function run {
	check_and_lock
	PATH=$BACKUP_EXECUTABLE_DIR:$ROOT:$PATH
	export PATH BACKUP_EXECUTABLE_DIR DRY_RUN DEBUG_LEVEL ROOT SESSION CONFIG
	local cmd=$1
	shift
	case "$cmd" in
		-c)
			source <(echo $*)
			exit
			;;
		*) 
			source $cmd $*
			exit
		;;
	esac
}

case "$cmd" in 
	LOCK)
		check_and_lock
		echo "All backups are locked; delete $SESSION/lock to unlock." 1>&2
		echo Backup has been explicitly locked. Delete this file to unlock. >$SESSION/lock
		trap '' EXIT
		exit ;;
	RUN) run $ARGS ;;
	*) run $ARGS ;;
esac;
