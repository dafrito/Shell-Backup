#!/bin/bash
PATH=/bin:/usr/bin
if [ ! -d "$BACKUP_EXECUTABLE_DIR" ]; then
	BACKUP_EXECUTABLE_DIR=${0%/*}
fi
source $BACKUP_EXECUTABLE_DIR/library.sh || exit 1
source $BACKUP_EXECUTABLE_DIR/load-settings.sh || exit 1

if [ ! "$BACKUP_PID" ]; then
	# We're the parent backup process, so export ourselves.
	export BACKUP_PID=$$
fi

if [ -e $TMP/lock ]; then
	if [ "$BACKUP_PID" != `cat $TMP/lock` ]; then
		error "Backup process at `cat $TMP/lock` appears to be running; delete $TMP/lock to unlock."
	fi
else
	echo $BACKUP_PID >$TMP/lock
	trap "rm -rf '$TMP'" EXIT
fi

cmd=$1
case "$cmd" in 
	-e|--edit)
		shift
		if [ -n "$1" ]; then
			$EDITOR "$PROFILES/$*"
		else
			$EDITOR $REPOS
		fi ;;
	-lock|--lock)
		echo "All backups are locked; delete $TMP/lock to unlock." 1>&2
		trap '' EXIT
		exit ;;
	--log)
		cat $LOG
		exit ;;
	-l|--list)
		shift
		for profile in `find $PROFILES -maxdepth 1`; do
			if [ ! -n "$root" ]; then
				root=`echo $profile | wc -m`
			else
				echo ${profile:$root}
			fi
		done  ;;
	*)
		shift
		profile="$*"
		if [ ! -n "$profile" ]; then
			profile=full
		fi
		[ -n "$profile" ] || error "backup: profile must be given"
		[ -f "$PROFILES/$profile" ] || error "backup: $profile is not a valid profile"
		log "Running profile '$profile':"
		PATH=$PATH:$BACKUP_EXECUTABLE_DIR bash "$PROFILES/$profile" 2>&1 | tee -a $LOG 1>&2
		R=$?
		if [ "$R" = "0" ]; then
			log "Profile '$profile' was successful."
		else
			log "Profile '$profile' failed with error code: $R"
		fi
		exit $R
	;;
esac;
