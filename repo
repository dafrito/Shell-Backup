#!/usr/bin/env backup

function backup_one {
	local path=$1
	local targets=$2
	shift 2
	local args="$*"
	cd `echo $path | sed -e "s%^~%$HOME%"`
	for target in `echo $targets | sed -e 's/,/ /g'`; do 
		push_repo $target $args || ERR=1
	done
}

function backup_to_target {
	local target=$1
	local path=$2
	shift 2
	local args="$*"
	cd `echo $path | sed -e "s%^~%$HOME%"`
	push_repo $target $args || ERR=1
}

function backup_by_name {
	[ -n "$1" ] || die "No repository name given"
	local search="^[^[:space:]]*$1[[:space:]]+"
	local possibles=`all_repos | grep -m 2 -Ece "$search"`
	if [ 0 = $possibles ]; then
		die "No repositories found for '$1'"
	elif [ 1 -lt $possibles ]; then
		local distincts=`all_repos | grep -m 2 -Ee "$search" | sort -bu -k 1,1 | wc -l`
		if [ $distincts -gt 1 ]; then
			echo "$distincts distinct repositories found for '$1':"
			all_repos | grep -m 2 -o -Ee "$search"
			exit 1
		fi 
	fi
	IFS='
'
	for repo_data in `all_repos | grep -Ee "$search"`; do
		unset IFS
		set - $repo_data
		backup_one $*

	done
}

function backup_by_target {
	local target=$1
	IFS='
'
	for repo_data in `all_repos`; do
		IFS=' 	'
		set -- $repo_data
		if echo "$2" | sed -e 's/,/\n/g' | grep -q "^$target$"; then
			backup_to_target $target $*
		fi
		IFS='
'
	done
}

function backup_all {
	IFS='
'
	for repo_data in `all_repos`; do
		IFS=' 	'
		set -- $repo_data
		backup_one $*
		IFS='
'
	done
}

if [ "$1" ]; then
	case "$1" in
		-t|--target) backup_by_target $2 ;;
		*) backup_by_name $1 ;;
	esac
else
	backup_all
fi

exit $ERR
# vim: set filetype=sh :
