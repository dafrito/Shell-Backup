#!/home/dafrito/projects/backup-settings/backup

function stage_files {
	local files=${1?"File location or files must be specified"}
	if echo $files | grep -q '/'; then
		sync stage $files
	else
		files="$CONFIG/files.d/$files"
		[ -f $files ] || die "File does not exist or is not a file: $files"
		if [ -x $files ]; then
			source $files || die "$files failed"
		else
			cd ~
			sync stage -f $files
		fi
	fi
	sync ls-staged -q || die "No files were staged"
}

function push_to_target {
	local targets=$1
	shift
	local args="$*"
	for target in `echo $targets | sed -e 's/,/ /g'`; do 
		sync push --keep $target $args || ERR=1
	done
	sync stage --clear
}

function backup_by_name {
	[ -n "$1" ] || die "No sync name given"
	debug "Syncing files with name: $1"
	local found=
	local search="^[[:space:]]*$1[[:space:]]+"
	IFS='
'
	for sync_data in `all_syncs | grep -Ee "$search"`; do
		found=true
		unset IFS
		set - $sync_data
		files=$1
		shift
		stage_files $files && push_to_target $* || die "Failed to stage files"
	done
	if [ ! "$found" ]; then
		die "No syncs found for '$1'"
	fi
}

function backup_by_target {
	local target=${1?"No target was provided"}
	IFS='
'
	for sync_data in `all_syncs`; do
		IFS=' 	'
		set -- $sync_data
		local files="$1"
		local targets="$2"
		shift 2
		if echo "$targets" | sed -e 's/,/\n/g' | grep -q "^$target$"; then
			stage_files $files &&
			push_to_target $target $* || ERR=1
		fi
		IFS='
'
	done
}

if [ "$1" ]; then
	case "$1" in
		-t|--target) backup_by_target $2 ;;
		*) backup_by_name $1 ;;
	esac
else
	backup_by_name '[^[:space:]]+'
fi

exit $ERR
# vim: set filetype=sh :
