#!/home/dafrito/projects/backup-settings/backup

function sync_to_target {
	target=$1
	shift
	echo "Syncing files with $target"
	path=`make_path "$target"`
	[ -n "$path" ] || die "No path found for target: $target"
	echo "Destination: $path"
	cd ~
	if [ "$target" = "portable" ]; then
		WINDOWS=true
	fi
	sync $* `cat $ROOT/config/environment`
	sync $* .ssh --exclude=id_rsa
	if [ "$target" = "bluespot" ]; then
		path="$path/home/dafrito"
	fi
	sync $* --delete --max-delete=10 `cat $ROOT/config/user`
}

function backup_one {
	local path=$1
	local targets=$2
	shift 2
	local args="$*"
	cd `echo $path | sed -e "s%^~%$HOME%"`
	for target in `echo $targets | sed -e 's/,/ /g'`; do 
		push_repo $target $args || ERR=1
	done
}

function backup_to_target {
	local target=$1
	local path=$2
	shift 2
	local args="$*"
	cd `echo $path | sed -e "s%^~%$HOME%"`
	push_repo $target $args || ERR=1
}

function backup_by_name {
	[ -n "$1" ] || die "No sync name given"
	local found=
	local search="^[[:space:]]*$1[[:space:]]+"
	IFS='
'
	for sync_data in `all_syncs | grep -Ee "$search"`; do
		found=true
		unset IFS
		set - $sync_data
		backup_one $*
	done
	if [ ! "$found" ]; then
		die "No syncs found for '$1'"
	fi
}

function backup_by_target {
	local target=$1
	IFS='
'
	for sync_data in `all_syncs`; do
		IFS=' 	'
		set -- $sync_data
		if echo "$2" | sed -e 's/,/\n/g' | grep -q "^$target$"; then
			backup_to_target $target $*
		fi
		IFS='
'
	done
}

function backup_all {
	IFS='
'
	for sync_data in `all_syncs`; do
		IFS=' 	'
		set -- $sync_data
		backup_one $*
		IFS='
'
	done
}

if [ "$1" ]; then
	case "$1" in
		-t|--target) backup_by_target $2 ;;
		*) backup_by_name $1 ;;
	esac
else
	backup_all
fi

exit $ERR
# vim: set filetype=sh :
