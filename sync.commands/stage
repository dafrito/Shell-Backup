#!/home/dafrito/projects/backup-settings/backup

mkdir -p $SESSION/sync
touch $SESSION/sync/staged

function add_file {
	for f; do
		local orig_f=$f
		debug "staging file: $f"
		if echo $f | grep -qe '/$'; then
			local has_trailing_slash=true
		fi
		f=`echo $f | sed -e "s%~%$HOME%g"`
		if echo $f | grep -qe '^/'; then
			true
		elif echo $f | grep -qe '/'; then
			f=`sync root-dir --resolve $f` || exit 1
		fi
		if [ $has_trailing_slash ]; then
			f="$f/"
		fi
		if [ -n "$files" ]; then
			files="$files
$f"
		else
			files="$f"
		fi
	done
}

while [ "$1" ]; do
	case "$1" in
		--tolerant) TOLERANT=true ;;
		--clear) 
			log "Clearing staged"
			rm -f $SESSION/sync/staged
			exit
			;;
		-f) 
			shift
			if [ "$1" = "-" ]; then
				log "Adding files from stdin"
				add_file `cat -`
			else
				[ -f $1 ] || die "Listfile does not exist: $1"
				log "Adding files from listfile: $1"
				add_file $(<$1) 
			fi ;;
		*) 
			log "Added file explicitly: $1"
			add_file $1 ;;
	esac
	shift
done

if [ ! "$files" ]; then
	IFS='
'
	debug "Reading files from stdin"
	while read file; do
		add_file $file
	done
	IFS=' 	
'
fi

[ -n "$files" ] || die "No files provided"

sync root-dir --test && cd `sync root-dir`
for f in $files; do
	if [ ! -e "$f" ]; then
		[ "$TOLERANT" ] || die "File does not exist: $f"
		ERR=1
	fi
done
echo "$files" >>$SESSION/sync/staged

exit $ERR
# vim: set filetype=sh :
