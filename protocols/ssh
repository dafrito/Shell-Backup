#!/bin/bash

function load_target {
	if [ "$SESSION" ]; then
		REMOTES_DIR="$SESSION/remotes";
	else
		REMOTES_DIR=/tmp/backup-ssh-remotes.$$/
		trap 'rm -rf "$REMOTES_DIR"' EXIT
	fi
	mkdir -p $REMOTES_DIR
	REMOTES=$REMOTES_DIR/$TARGET_NAME
	if [ ! -e "$REMOTES" ] || [ "$TARGET" != "`cat $REMOTES.path`" ]; then
		echo "$TARGET" >"$REMOTES.path"
		ssh -l "$SSH_USERNAME" "$SSH_URL" "find $TARGET -maxdepth 1 -type d" >$REMOTES
	fi
}

function protocol_load_settings {
	shift
	SSH_URL=${1?"URL must be given for $TARGET_NAME"};
	SSH_USERNAME=${2?"username must be given for $TARGET_NAME"};
	TARGET=${3?"remote path must be given for $TARGET_NAME"};
}

function protocol_repo_exists {
	load_target
	grep -Eqe "^$TARGET/$*$" $REMOTES
}

function protocol_init_repo {
	ssh -l $SSH_USERNAME $SSH_URL "
		set -e
		mkdir -p $TARGET/$*
		cd $TARGET/$*
		git init --bare"
}

function protocol_canonicalize {
	if [ "$#" -gt 0 ]; then
		echo "$SSH_USERNAME@$SSH_URL:$TARGET/$*"
	else
		echo "$SSH_USERNAME@$SSH_URL:$TARGET"
	fi
}

function protocol_push_repo {
	git push --mirror --porcelain `protocol_canonicalize "$*"`
}
